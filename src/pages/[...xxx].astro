---
import Layout from "../layouts/Layout.astro";
import apiData from "../data/api-data";
import { createQuestionUrl, getFullUrl, mapApiData } from "../utils/utils";
import type { ApiDataItem, QuestionPageData } from "../store/questions";

export async function getStaticPaths() {
  const categories = ["a", "b", "c", "c1", "d1"];

  

  const arrayToGeneratePages: any[] = [];

  categories.forEach((category) => { 
    const arrayToGeneratePagesPerCategory =  mapApiData(apiData as ApiDataItem[])
    .filter((q) => q.categories.includes(category))
    .map((q, index) => {
    const questionPageData: QuestionPageData = {
      ...q,
      slug: createQuestionUrl(q.id,category),
      category,
      prevSlug:
        index === 0
          ? getFullUrl(createQuestionUrl(q.id,category))
          : getFullUrl(createQuestionUrl(apiData[index - 1].id,category)),
      nextSlug:
        index === apiData.length - 1
          ? getFullUrl(createQuestionUrl(q.id,category))
          : getFullUrl(createQuestionUrl(apiData[index + 1].id,category)),
    };

 

    return {
      params: {xxx:  createQuestionUrl(q.id, category) },
      props: { questionPageData },
    };
   

  });
  arrayToGeneratePages.push(...arrayToGeneratePagesPerCategory);



    
  });



console.log(1111111, arrayToGeneratePages) 

 return arrayToGeneratePages
 
  
}

const { id, text, category, prevSlug, nextSlug } = Astro.props.questionPageData;
---

<Layout>
  <p><a href={prevSlug}>poprzednie</a> | <a href={nextSlug}>nastÄ™pne</a></p>
  <h2>Kategoria: <strong>{category}</strong>, id: {id}</h2>
  <h1>{text}</h1>

  <pre>{JSON.stringify( Astro.params, null,2)}</pre>
  <pre>{JSON.stringify( Astro.props, null,2)}</pre>
</Layout>