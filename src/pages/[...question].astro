---
import Layout from "../layouts/Layout.astro";
import Media from "../components/Media.astro";
// import PrevNextQuestion from "../components/PrevNextQuestion.astro";
import PrevNextQuestion from "../reactComponents/PrevNextQuestion";
import CurrentYearAstro from "../components/CurrentYearAstro.astro";

import masterQuestionsJson from "../data/masterQuestions.json";
import {
  createBigObjectDataFromApiDataForBuildTime,
  createQuestionUrl,
  getFullUrl,
} from "../utils/utils";

import AnswerAbc from "../reactComponents/AnswerAbc";
import AnswerYesNo from "../reactComponents/AnswerYesNo";
import QuestionText from "../reactComponents/QuestionText";
import QuestionTable from "../reactComponents/QuestionTable";
import GivenAnswers from "../reactComponents/GivenAnswers";
import PostsFromOldWordpress from "../reactComponents/PostsFromOldWordpress";
import Modal from "../reactComponents/Modal";
import { URLS } from "../urls/urls";
import type { QuestionPageData } from "../store/types";

interface ArrayToGeneratePages {
  params: {
    question: string;
  };
  props: {
    questionPageData: QuestionPageData;
  };
}

export async function getStaticPaths() {
  const { allCategories, allQuestions } =
    createBigObjectDataFromApiDataForBuildTime();
  const explanations = masterQuestionsJson.allQuestions;

  const arrayToGeneratePages: ArrayToGeneratePages[] = [];

  allCategories.forEach((category) => {
    const arrayToGeneratePagesPerCategory = allQuestions
      .filter((q) => q.categories.includes(category))
      .map((q) => {
        const expls = explanations.find((e) => e.id === q.id)?.expl || [];
        const lows = explanations.find((e) => e.id === q.id)?.low || [];

        const questionPageData: QuestionPageData = {
          ...q,
          slug: createQuestionUrl(q, category),
          category,
          prevSlug: "#",
          nextSlug: "#",
          expls: typeof expls === "string" ? [expls] : expls,
          lows,
        };

        return {
          params: { question: createQuestionUrl(q, category) },
          props: { questionPageData, allCategories },
        };
      });

    arrayToGeneratePages.push(...arrayToGeneratePagesPerCategory);
  });

  const arrayToGeneratePagesWithPrevNext = arrayToGeneratePages.map(
    (page, index) => {
      const prevPage = arrayToGeneratePages[index - 1];
      const nextPage = arrayToGeneratePages[index + 1];

      return {
        ...page,
        props: {
          ...page.props,
          questionPageData: {
            ...page.props.questionPageData,
            prevSlug: prevPage ? getFullUrl(prevPage.params.question) : null,
            nextSlug: nextPage ? getFullUrl(nextPage.params.question) : null,
          },
        },
      };
    }
  );

  return arrayToGeneratePagesWithPrevNext;
}

const questionPageData: QuestionPageData = Astro.props.questionPageData;
const allCategories = Astro.props.allCategories;
const { text, category, score, media, expls, lows, prevSlug, nextSlug } =
  questionPageData;
---

<Layout
  title={`${text} | Darmowe testy na prawo jazdy ${new Date().getFullYear()}`}
>
  <div class="row">
    <div class="col-12 col-lg-6">
      <Media media={media} text={text} />

      <QuestionText client:load question={questionPageData} />

      <AnswerAbc client:load question={questionPageData} />

      <AnswerYesNo client:load question={questionPageData} />

      <!-- <PrevNextQuestion prevSlug={prevSlug} nextSlug={nextSlug} /> -->

      <PrevNextQuestion client:load question={questionPageData} />

      <div data-info class="row mb-3 bg-light">
        {
          [
            // { label: id },
            { colSize: 3, label: `kat: ${category.toUpperCase()}` },
            { colSize: 3, label: `pkt: ${score}` },
            {
              colSize: 6,
              label: (
                <Modal
                  client:load
                  openModalText="zgłoś błąd"
                  openModalIcon="bi bi-flag"
                  modalTitle="zgłoś błąd"
                />
              ),
            },
          ].map(({ label, colSize }) => (
            <div class={`col-${colSize}`}>
              <div class="text-secondary h-100 d-flex justify-content-center align-items-center">
                {label}
              </div>
            </div>
          ))
        }
      </div>

      <!-- <div class="row mb-3">
        <div class="col">
          <div class="small text-center">
            <p class="mb-0"><strong> Oceń znajomość tego pytania:</strong></p>
            <p>(będziesz mógł przeglądać ocenione pytania)</p>
          </div>
        </div>
      </div> -->

      <!-- <div class="row mb-3">
         <div class="col">
          <h2>Twoje postępy w nauce:</h2>
          <a href="#" class="btn btn-success w-100 d-block mb-2"
            >Dobrze odpowiedziałeś na 0 pytań.
            <u>zobacz.</u>
          </a>
          <a href="#" class="btn btn-danger w-100 d-block mb-2"
            >Średnio odpowiedziałeś na 0 pytań.
            <u>zobacz.</u>
          </a>
        </div>
      </div> -->

      <div class="row mb-3">
        <div class="col text-start">
          <h2>Wyjaśnienie pytania z testów na prawo jazdy:</h2>

          <div>
            <!-- <p class="small">expls.length === {expls.length}</p> -->
            <div>{expls.map((expl) => <p>{expl}</p>)}</div>
          </div>

          <div>
            <!-- <p class="small">lows.length === {lows.length}</p> -->

            {
              lows.map((article) => {
                return (
                  <div class="container my-3">
                    <p>{article.title}</p>
                    {article.artContent.map((content: any) => (
                      <div class="my-4">
                        <p>
                          <span class="fw-bold">{content.title}</span>{" "}
                          <span>{content.text}</span>
                        </p>
                      </div>
                    ))}
                  </div>
                );
              })
            }

            <!-- <pre>{JSON.stringify(lows,null,2)}</pre> -->
          </div>
        </div>

        <!-- <div class="row mb-3">
        <div class="col text-start">
          <h2>Wyjaśnienie pytania z testów na prawo jazdy:</h2>

          <div>
            <p>
              Przejeżdżając obok tramwaju który zatrzymał się na przystanku
              należy ustąpić pierwszeństwa pieszym chcącym wsiąść i wysiąść z
              pojazdu.
            </p>
          </div>
          <p></p>
          <p>ustawa108 art3 art3ust1pktart26ust6</p>
          <div>[object Object]</div>
        </div>
      </div> -->

        <div class="row">
          <div class="col">
            <p>
              To pytanie należy do kategorii <strong
                >{category.toUpperCase()},</strong
              >
              testów na prawo jazdy z <CurrentYearAstro /> roku.
            </p>
            <p>
              <a
                href={URLS.DRIVING_LICENSE_CATEGIRIES}
                class="text-decoration-none"
              >
                Zmień domyślną kategorię pytań z testów na prawo jazdy jaką
                chcesz się uczyć!
              </a>
            </p>
          </div>
        </div>

        <div class="row mb-3">
          <div class="col">
            <QuestionTable client:load question={questionPageData} />
          </div>
        </div>

        <!-- <div class="row">
        <div class="col">
          <h2>Szczegóły dotyczące tego pytania testowego:</h2>
          <div class="table-responsive">
            <table class="table table-dark">
              <caption
                >Powyższa tabela przedstawia szegółowe informacje dotyczące
                pytania z testów na prawo jazdy. Informacje są aktualne w lutym
                2023 roku.</caption
              >
              <thead>
                <tr>
                  <th scope="col">Co?</th>
                  <th scope="col">Info!</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <th scope="row">Id w bazie danych ministerstwa transportu</th>
                  <td> <span>id</span></td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div> -->

        <!-- ROW ROW -->
        <div class="row">
          <div class="col">
            <div class="mt-5 pb-5 text-start">
              <p>
                Pamiętaj, że jedno konkretne pytanie z
                <strong>
                  testów na prawo jazdy aktualnych w <CurrentYearAstro
                  /></strong
                >
                może należeć do wielu różnych kategorii prawa jazdy. To pytanie testowe
                należy to kategorii {
                  questionPageData.categories.join(", ").toUpperCase()
                }
              </p>
              <p>
                Wszystkie dostępne kategorie pytań z testów na prawo jazdy w
                lutym <CurrentYearAstro /> to
                <strong>{allCategories.join(", ").toUpperCase()}</strong>
              </p>
            </div>
          </div>
        </div>

        <!-- <div class="row mb-3">
        <div class="col">
          <h2>Zobacz też inne pytania testowe!</h2>
          ...
        </div>
      </div> -->

        <p>
          <a
            href={`https://poznaj-testy.pl/${createQuestionUrl(
              questionPageData,
              "b"
            )}`}
            target="_blank"
            rel="noopener noreferrer"
            >{
              `https://poznaj-testy.pl/${createQuestionUrl(
                questionPageData,
                "b"
              )}`
            }</a
          >
        </p>
      </div>
    </div>

    <!-- RIGHT SIDEBAR  -->
    <div class="col-12 col-lg-6">
      <div class="row pb-3">
        <div class="col">
          <h2>Blog i artykuły:</h2>

          <PostsFromOldWordpress />
        </div>
      </div>

      <GivenAnswers client:load />
    </div>
  </div>
</Layout>
