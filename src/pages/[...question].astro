---
import Layout from "../layouts/Layout.astro";
import CurrentYearAstro from "../components/CurrentYearAstro.astro";
import MediaAstro from "../components/MediaAstro.astro";

import { apiResponse } from "../settings/settings";

import type { ApiResponse, Question, QuestionPageData } from "../store/types";
import { replace } from "lodash";

export async function getStaticPaths() {
  const {
    allCategories,
    allQuestions,
    questionsPerCategoryCountObj,
    firstQuestionUrlsObj,
  } = apiResponse as ApiResponse;

  const allQuestionsPageData: QuestionPageData[] = allQuestions.map(
    (question, index) => {
      const prevQuestion = allQuestions[index - 1];
      const nextQuestion = allQuestions[index + 1];

      return {
        ...question,
        slug: question.slug[0] === "/" ? question.slug.slice(1) : question.slug,
        prevSlug: prevQuestion ? prevQuestion.slug : null,
        nextSlug: nextQuestion ? nextQuestion.slug : null,
      };
    }
  );

  return allQuestionsPageData.map((questionPageData) => {
    return {
      params: { question: questionPageData.slug },
      props: { questionPageData },
    };
  });
}

const questionPageData = Astro.props.questionPageData as QuestionPageData;
const { id, t, a, b, c, r, s, m, prevSlug, nextSlug } = questionPageData;

const isABCQuestion = a && b && c;
---

<Layout
  title={`${t} | Darmowe testy na prawo jazdy ${new Date().getFullYear()}`}
>
  <div class="row">
    <!-- <pre>{JSON.stringify(Astro.props, null,2)}</pre> -->
    <div class="col-12 col-lg-6">
      <MediaAstro m={m} t={t} />

      <h1 class="text-start">{t}</h1>
      <!-- <QuestionText client:load question={questionPageData} /> -->

      <!-- <TextReact
        client:load
        id={id}
        t={t}
        prevSlug={prevSlug}
        nextSlug={nextSlug}
        s={s}
      /> -->

      {
        isABCQuestion ? (
          <div class="row mb-3">
            <div class="col">
              <div class="d-grid gap-2 d-block">
                {["a", "b", "c"].map((letter) => (
                  <button
                    type="button"
                    class:list={[
                      "__answer btn btn-secondary text-start",
                      { __correctanswer: letter === r },
                      { __wronganswer: letter !== r },
                    ]}
                  >
                    <strong>{letter.toUpperCase()}) </strong>{" "}
                    {questionPageData[letter]} {r}
                  </button>
                ))}
              </div>
            </div>
          </div>
        ) : (
          <div class="row mb-3 text-center">
            <div class="col">
              <div class="mb-0">
                {[
                  ["t", "Tak"],
                  ["n", "Nie"],
                ].map(([value, label]) => (
                  <button
                    class:list={[
                      "__answer btn btn-secondary mx-2",
                      { __correctanswer: value === r },
                      { __wronganswer: value !== r },
                    ]}
                  >
                    {label}
                  </button>
                ))}
              </div>
            </div>
          </div>
        )
      }

      <div>
        <p class="__showWhenCorrectAnswerClicked d-none">
          <strong class="text-success">Dobrze</strong>
        </p>
        <p class="__showWhenWrongAnswerClicked d-none">
          <strong class="text-danger">Źle</strong>
        </p>
      </div>
      <!-- <NextQuestionButtonAstro text="następne" initialUrl={nextSlug} /> -->

      <!-- <PrevNextQuestion prevSlug={prevSlug} nextSlug={nextSlug} /> -->
      <p class="d-flex justify-content-between">
        <a href={prevSlug}>prevSlug</a>
        <a href={nextSlug}>nextSlug</a>
      </p>
      <!-- <PrevNextQuestion client:load question={questionPageData} /> -->

      <!-- <div class="text-start">
        <pre>
          {JSON.stringify(questionPageData, null, 2)}
        </pre>
      </div> -->

      <!-- <div class="text-start">
        <pre>
          {JSON.stringify(allQuestionsAllCategories, null, 2)}
        </pre>
      </div> -->

      <!-- <div data-info class="row mb-3 bg-light">
        {
          [
            { colSize: 2, label: `nr: ${id.replace("id", "")}` },
            { colSize: 2, label: `kat: ${category.toUpperCase()}` },
            { colSize: 2, label: `pkt: ${score}` },
            {
              colSize: 6,
              label: (
                <Modal
                  client:load
                  openModalText="zgłoś błąd"
                  openModalIcon="bi bi-flag"
                  modalTitle="zgłoś błąd"
                />
              ),
            },
          ].map(({ label, colSize }) => (
            <div class={`col-${colSize}`}>
              <div class="text-secondary h-100 d-flex justify-content-center align-items-center">
                {label}
              </div>
            </div>
          ))
        }
      </div> -->

      <!-- <div class="row mb-3">
        <div class="col">
          <div class="small text-center">
            <p class="mb-0"><strong> Oceń znajomość tego pytania:</strong></p>
            <p>(będziesz mógł przeglądać ocenione pytania)</p>
          </div>
        </div>
      </div> -->

      <!-- <div class="row mb-3">
         <div class="col">
          <h2>Twoje postępy w nauce:</h2>
          <a href="#" class="btn btn-success w-100 d-block mb-2"
            >Dobrze odpowiedziałeś na 0 pytań.
            <u>zobacz.</u>
          </a>
          <a href="#" class="btn btn-danger w-100 d-block mb-2"
            >Średnio odpowiedziałeś na 0 pytań.
            <u>zobacz.</u>
          </a>
        </div>
      </div> -->

      <div class="row mb-3">
        <div class="col text-start">
          <!-- <h2>Wyjaśnienie pytania z testów na prawo jazdy:</h2> -->

          <div>
            <!-- <p class="small">expls.length === {expls.length}</p> -->
            <!-- <div>{expls.map((expl) => <p>{expl}</p>)}</div> -->
          </div>

          <div>
            <!-- <p class="small">lows.length === {lows.length}</p> -->

            <!-- {
              lows.map((article) => {
                return (
                  <div class="container my-3">
                    <p>{article.title}</p>
                    {article.artContent.map((content: any) => (
                      <div class="my-4">
                        <p>
                          <span class="fw-bold">{content.title}</span>{" "}
                          <span>{content.text}</span>
                        </p>
                      </div>
                    ))}
                  </div>
                );
              })
            } -->

            <!-- <pre>{JSON.stringify(lows,null,2)}</pre> -->
          </div>
        </div>

        <!-- <div class="row mb-3">
        <div class="col text-start">
          <h2>Wyjaśnienie pytania z testów na prawo jazdy:</h2>

          <div>
            <p>
              Przejeżdżając obok tramwaju który zatrzymał się na przystanku
              należy ustąpić pierwszeństwa pieszym chcącym wsiąść i wysiąść z
              pojazdu.
            </p>
          </div>
          <p></p>
          <p>ustawa108 art3 art3ust1pktart26ust6</p>
          <div>[object Object]</div>
        </div>
      </div> -->

        <div class="row">
          <div class="col">
            <!-- <p>
              To pytanie należy do kategorii <strong
                >{category.toUpperCase()},</strong
              >
              testów na prawo jazdy z <CurrentYearAstro /> roku.
            </p>
            <p>
              <a
                href={URLS.DRIVING_LICENSE_CATEGIRIES}
                class="text-decoration-none"
              >
                Zmień domyślną kategorię pytań z testów na prawo jazdy jaką
                chcesz się uczyć!
              </a>
            </p> -->
          </div>
        </div>

        <div class="row mb-3">
          <div class="col">
            Testy są aktualne w <CurrentYearAstro />roku!
          </div>
        </div>

        <!-- <div class="row">
        <div class="col">
          <h2>Szczegóły dotyczące tego pytania testowego:</h2>
          <div class="table-responsive">
            <table class="table table-dark">
              <caption
                >Powyższa tabela przedstawia szegółowe informacje dotyczące
                pytania z testów na prawo jazdy. Informacje są aktualne w lutym
                2023 roku.</caption
              >
              <thead>
                <tr>
                  <th scope="col">Co?</th>
                  <th scope="col">Info!</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <th scope="row">Id w bazie danych ministerstwa transportu</th>
                  <td> <span>id</span></td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div> -->

        <!-- ROW ROW -->
        <div class="row">
          <div class="col">
            <div class="mt-5 pb-5 text-start">
              <!-- <p>
                Pamiętaj, że jedno konkretne pytanie z
                <strong>
                  testów na prawo jazdy aktualnych w <CurrentYearAstro
                  /></strong
                >
                może należeć do wielu różnych kategorii prawa jazdy. To pytanie testowe
                należy to kategorii {
                  questionPageData.categories.join(", ").toUpperCase()
                }
              </p> -->
              <!-- <p>
                Wszystkie dostępne kategorie pytań z testów na prawo jazdy w
                lutym <CurrentYearAstro /> to
                <!-- <strong>{allCategories.join(", ").toUpperCase()}</strong> -->
            </div> -->
          </div>
        </div>
      </div>

      <!-- <div class="row mb-3">
        <div class="col">
          <h2>Zobacz też inne pytania testowe!</h2>
          ...
        </div>
      </div> -->

      <!-- <p>
          <a
            href={`https://poznaj-testy.pl/${createQuestionUrl(
              questionPageData,
              "b"
            )}`}
            target="_blank"
            rel="noopener noreferrer"
            >{
              `https://poznaj-testy.pl/${createQuestionUrl(
                questionPageData,
                "b"
              )}`
            }</a
          >
        </p> -->
    </div>
  </div>

  <!-- RIGHT SIDEBAR  -->
  <div class="col-12 col-lg-6">
    <div class="row pb-3">
      <div class="col">
        <h2>Blog i artykuły:</h2>

        <!-- <PostsFromOldWordpress /> -->
      </div>
    </div>

    <!-- <GivenAnswers client:load /> -->
  </div>
</Layout>

<script>
  const answers = document.querySelectorAll(".__answer");
  const correctAnswers = document.querySelectorAll(".__correctanswer");
  const wrongAnswers = document.querySelectorAll(".__wronganswer");

  const showWhenCorrectAnswerClickedElements = document.querySelectorAll(
    ".__showWhenCorrectAnswerClicked"
  );

  const showWhenWrongAnswerClickedElements = document.querySelectorAll(
    ".__showWhenWrongAnswerClicked"
  );

  correctAnswers.forEach((correctAnswer) => {
    correctAnswer.addEventListener("click", () => {
      wrongAnswers.forEach((wrongAnswer) => {
        console.log("wrongAnswer", wrongAnswer);
        wrongAnswer.classList.add("btn-secondary");
        wrongAnswer.classList.remove("btn-danger", "btn-success");
      });

      correctAnswers.forEach((correctAnswer) => {
        console.log("correctAnswer", correctAnswer);
        correctAnswer.classList.add("btn-success");
        correctAnswer.classList.remove("btn-secondary", "btn-danger");
      });

      showWhenCorrectAnswerClickedElements.forEach((element) => {
        element.classList.remove("d-none");
        element.classList.add("d-block");
      });

      showWhenWrongAnswerClickedElements.forEach((element) => {
        element.classList.remove("d-block");
        element.classList.add("d-none");
      });
    });
  });

  wrongAnswers.forEach((wrongAnswer) => {
    // WRONG ANSWER CLICKED
    wrongAnswer.addEventListener("click", () => {
      wrongAnswers.forEach((wrongAnswer) => {
        console.log("wrongAnswer", wrongAnswer);
        wrongAnswer.classList.add("btn-danger");
        wrongAnswer.classList.remove("btn-secondary", "btn-success");
      });

      correctAnswers.forEach((correctAnswer) => {
        console.log("correctAnswer", correctAnswer);
        correctAnswer.classList.add("btn-success");
        correctAnswer.classList.remove("btn-secondary", "btn-danger");
      });

      showWhenWrongAnswerClickedElements.forEach((element) => {
        element.classList.remove("d-none");
        element.classList.add("d-block");
      });

      showWhenCorrectAnswerClickedElements.forEach((element) => {
        element.classList.remove("d-block");
        element.classList.add("d-none");
      });
    });
  });
</script>
